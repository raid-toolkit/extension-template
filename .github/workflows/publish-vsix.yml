name: .NET Core Desktop

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on:
      windows-latest # For a list of available runner types, refer to
      # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      IS_CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Install the .NET Core workload
      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2

      # Versions
      - uses: dotnet/nbgv@master
        id: app_version

      # Restore the application to populate the obj folder with RuntimeIdentifiers
      - name: Build the application
        run: msbuild TemplateVSIX\TemplateVSIX.sln /p:Configuration=Release

        # Create releases
      - name: Create Release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.app_version.outputs.Version }}
          release_name: RaidToolkit Extension Template v${{ steps.app_version.outputs.Version }}
          body: RaidToolkit Extension Template v${{ steps.app_version.outputs.Version }}
          draft: false
          prerelease: false

      - name: Upload vsix Asset
        id: upload-vsix-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./TemplateVSIX/bin/release/RTKExtensionTemplate.vsix
          asset_name: RTKExtensionTemplate.vsix
          asset_content_type: application/octet-stream
